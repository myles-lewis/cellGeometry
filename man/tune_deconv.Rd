% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_deconv.R
\name{tune_deconv}
\alias{tune_deconv}
\title{Tune deconvolution parameters}
\usage{
tune_deconv(
  cm,
  test,
  samples,
  grid,
  output = "output",
  force_intercept = FALSE,
  ...
)
}
\arguments{
\item{cm}{cellMarkers class object}

\item{test}{matrix of bulk RNA-Seq to be deconvoluted. Passed to \code{\link[=deconvolute]{deconvolute()}}.}

\item{samples}{matrix of cell amounts with subclasses in columns and samples
in rows.}

\item{grid}{List of length 1 containing a named vector. The name represents
the parameter to be tuned and needs to be an argument for either
\code{\link[=updateMarkers]{updateMarkers()}} or \code{\link[=deconvolute]{deconvolute()}}. The elements of the vector are the
values to be tested.}

\item{output}{Character value, either "output" or "percent" specifying which
output from the subclass results element resulting from a call to
\code{\link[=deconvolute]{deconvolute()}}. This deconvolution result is compared against the actual
sample cell numbers in \code{samples}, using \code{\link[=Rsq_set]{Rsq_set()}}.}

\item{force_intercept}{Logical whether to force intercept through 0.}

\item{...}{Optional arguments passed to \code{\link[=deconvolute]{deconvolute()}}.}
}
\value{
Dataframe whose columns include: the parameter being tuned, cell
subclass and R squared.
}
\description{
Tests a tuning grid of a deconvolution parameter for either \code{\link[=updateMarkers]{updateMarkers()}}
(e.g. \code{expfilter} or \code{nsubclass}) or \code{\link[=deconvolute]{deconvolute()}} (e.g. \code{comp_amount}).
}
